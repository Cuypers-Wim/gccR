% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/int_subset_EC.R
\name{internal_ec_subset}
\alias{internal_ec_subset}
\title{Calculate EC for Subsets of an Expression Matrix Grouped per Sample}
\usage{
internal_ec_subset(
  exp_combo,
  exprM,
  labelsM,
  experiments_all = NULL,
  threads = 1,
  maxIter = 200,
  conv = 0.001
)
}
\arguments{
\item{exp_combo}{Vector of experiment identifiers to define subsets.}

\item{exprM}{Numeric matrix of expression data where columns represent experiments.}

\item{labelsM}{Matrix of labels corresponding to \code{exprM}.}

\item{experiments_all}{Vector of all possible experiment identifiers. If not NULL, used
to filter \code{exprM} columns for subset EC calculation.}

\item{threads}{Integer, the number of threads to use for parallel computation (default is 1).}

\item{maxIter}{Maximum number of iterations for the EC computation (default is 200).}

\item{conv}{Convergence threshold for the EC computation (default is 0.001).}
}
\value{
The final EC value
}
\description{
This internal function calculates the EC for subsets of an
expression matrix. It groups the expression matrix per sample based on the specified
experiment combinations, computes correlation matrices, and then calculates the EC.
It is designed to work with subsets, particularly useful for analyses that require
partitioning of data into meaningful groups before EC calculation.
}
\details{
The function first identifies columns in the expression matrix that match the specified
experiment combinations. It then splits the expression matrix into two halves based on these
combinations, computes correlation matrices for each half, and removes rows and columns
with zero variance. The EC is calculated from these processed correlation matrices.
}
\examples{
exprM <- matrix(rnorm(1000), 100, 10)
labelsM <- matrix(sample(0:1, 1000, replace = TRUE), 100, 10)
experiments_all <- 1:10
exp_combo <- c(1, 5, 9)
ECresult <- internal_ec_subset(exp_combo, exprM, labelsM, experiments_all)
}
\keyword{internal}
